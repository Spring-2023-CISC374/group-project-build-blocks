var m=Object.defineProperty;var v=(h,r,t)=>r in h?m(h,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[r]=t;var i=(h,r,t)=>(v(h,typeof r!="symbol"?r+"":r,t),t);import{C as S,a as u,P as _,b as f,B as R,c as y,d as k}from"./Crane.a4e637f4.js";class E extends S{constructor(){super(...arguments);i(this,"visitProgram");i(this,"visitStatement");i(this,"visitLoopStatement");i(this,"visitMoveStatement");i(this,"visitActionStatement");i(this,"visitGrabAction");i(this,"visitReleaseAction")}}class D extends E{constructor(t,e){super();i(this,"output");i(this,"indent");i(this,"scene");i(this,"timing");i(this,"visitProgram",t=>{this.indent=0,this.output&&(this.output.innerHTML=""),this.visitChildren(t)});i(this,"visitStatement",t=>{this.output&&(this.output.innerHTML+=`${"&nbsp;".repeat(this.indent*4)}visitStatement ${t.getText()}<br>`),this.visitChildren(t)});i(this,"visitLoopStatement",t=>{this.output&&(this.output.innerHTML+=`${"&nbsp;".repeat(this.indent*4)}visitLoopStatement ${t.getText()}<br>`);for(let e=0;e<parseInt(t.getChild(1).getText());e++)this.visitChildren(t)});i(this,"visitActionStatement",t=>{var e,s;switch(this.output&&(this.output.innerHTML+=`${"&nbsp;".repeat(this.indent*4)}visitActionStatement ${t.getText()}<br>`),t.getText()){case"open":case"release":(e=this.scene)==null||e.time.delayedCall(this.timing,()=>{var n;(n=this.scene)==null||n.getCrane.release()}),this.timing+=u.MOVEMENT_TIME+500,console.log("open",this.timing);break;case"close":case"grab":(s=this.scene)==null||s.time.delayedCall(this.timing,()=>{var n;(n=this.scene)==null||n.getCrane.grab()}),this.timing+=u.MOVEMENT_TIME+500,console.log("close",this.timing);break}});i(this,"visitMoveStatement",t=>{var e,s,n,o,g;switch(this.output&&(this.output.innerHTML+=`${"&nbsp;".repeat(this.indent*4)}visitMoveStatement ${t.getText()}<br>`),console.log((e=this.scene)==null?void 0:e.getCrane),t.getText()){case"up":(s=this.scene)==null||s.time.delayedCall(this.timing,()=>{var a;(a=this.scene)==null||a.getCrane.moveUp()}),this.timing+=u.MOVEMENT_TIME+500,console.log("move up",this.timing);break;case"down":(n=this.scene)==null||n.time.delayedCall(this.timing,()=>{var a;(a=this.scene)==null||a.getCrane.moveDown()}),this.timing+=u.MOVEMENT_TIME+500,console.log("move down",this.timing);break;case"left":(o=this.scene)==null||o.time.delayedCall(this.timing,()=>{var a;(a=this.scene)==null||a.getCrane.moveLeft()}),this.timing+=u.MOVEMENT_TIME+500,console.log("move leftr",this.timing);break;case"right":(g=this.scene)==null||g.time.delayedCall(this.timing,()=>{var a;(a=this.scene)==null||a.getCrane.moveRight()}),this.timing+=u.MOVEMENT_TIME+500,console.log("move roigiht",this.timing);break;default:console.error("visitMoveStatement: invalid move statement",t.getText());break}console.log("visitMoveStatement",t.getText()),this.visitChildren(t)});this.indent=0,this.output=t,this.scene=e,this.timing=0}}class p extends Phaser.GameObjects.Image{constructor(t,e,s,n){super(t,e,s,"instruction-"+n);i(this,"instructionType");i(this,"nextInstruction");i(this,"previousInstruction");this.instructionType=n,this.setInteractive(),t.input.setDraggable(this),this.input.dropZone=!0,this.on("pointerover",()=>{this.setTint(4521796)}),this.on("pointerout",()=>{this.clearTint()}),t.input.on("drag",this.handleDrag,this),t.input.on("drop",this.handleDrop,this)}handleDrag(t,e,s,n){this!==e&&this.scene.children.bringToTop(this),this===e&&(this.previousInstruction&&(this.previousInstruction.nextInstruction=void 0,this.previousInstruction=void 0),this.moveInstruction(s,n))}moveInstruction(t,e){this.x=t,this.y=e,this.nextInstruction!==void 0&&this.nextInstruction.moveInstruction(t,e+31)}snapIntoPlace(){var t;this.previousInstruction&&(this.x=this.previousInstruction.x,this.y=this.previousInstruction.y+31),this.nextInstruction&&((t=this.nextInstruction)==null||t.snapIntoPlace())}handleDrop(t,e,s){e===this&&s instanceof p&&s!==this&&(this.previousInstruction===void 0&&s.nextInstruction===void 0&&(this.previousInstruction=s,this.previousInstruction.nextInstruction=this),this.snapIntoPlace())}}class b extends _.Physics.Arcade.Sprite{constructor(t,e,s,n,o,g){super(t,e,s,n,g);i(this,"color");this.color=o,this.setColor(o),t.add.existing(this),t.physics.add.existing(this)}setColor(t){switch(this.color=t,this.color){case"brown":this.clearTint();break;case"red":this.setTint(16711680);break;case"green":this.setTint(65280);break;case"blue":this.setTint(671487);break;default:this.clearTint();break}}getColor(){return this.color}checkOverlap(t){const e=Math.abs(this.body.position.x-t.body.position.x),s=Math.abs(this.body.position.y-t.body.position.y),n=Math.sqrt(e*e+s*s);return console.log(n),n<.1}}function T(h,r,t,e){return{GRID_START_BOTTOM:h,GRID_START_LEFT:r,GRID_SQUARE_SIZE:t,GRID_END_RIGHT:r+t*e.width,GRID_END_TOP:h+t*e.height,GRID_MID_HORIZONTAL:(r+t*e.width+r)/2,GRID_MID_VERTICAL:(h+t*e.height+h)/2}}class I{constructor(r,t,e){i(this,"scene");i(this,"gridData");i(this,"isPrimaryGrid");i(this,"gridSquares");i(this,"crane");i(this,"crates");i(this,"endCrates");i(this,"toggleVisibleButton");i(this,"gridVars");i(this,"isVisible");i(this,"maxScore");this.scene=e,this.isPrimaryGrid=t,this.gridData=r,this.isPrimaryGrid?this.gridVars=T(d.P_GRID_START_BOTTOM,d.P_GRID_START_LEFT,d.P_GRID_SQUARE_SIZE,r):this.gridVars=T(d.S_GRID_START_BOTTOM,d.S_GRID_START_LEFT,d.S_GRID_SQUARE_SIZE,r),this.isVisible=!0,t&&this.getMaxScore()}getGoalText(){let r=`GOAL
`;const t=`
E = empty
C = crane
T = tan
R = Red
G = green
B = blue`,e={none:"E","crate-brown":"T","crate-red":"R","crate-green":"G","crate-blue":"B",crane:"C"};for(let s=0;s<this.gridData.gridObjectives.length;s++){for(let n=0;n<this.gridData.gridObjectives[s].length;n++)r+=(e[this.gridData.gridObjectives[s][n]]||"?")+" ";r+=`
`}return r+=t,r}makeGrid(){var r;for(let t=0;t<this.gridData.width;t++){const e=[];for(let s=0;s<this.gridData.height;s++){const n=this.scene.add.image(this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*t,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,"gridSquare");e.push(n)}(r=this.gridSquares)==null||r.push(e)}this.endCrates=this.placeBlocks(!1),this.endCrates.setAlpha(.5),this.isPrimaryGrid&&(this.crates=this.placeBlocks(!0),this.toggleVisibleButton=this.scene.add.sprite(this.gridVars.GRID_MID_HORIZONTAL,this.scene.sys.game.canvas.height-(this.gridVars.GRID_END_TOP+20),"visibilityButton").setFrame(1),this.toggleVisibleButton.setInteractive(),this.toggleVisibleButton.on("pointerup",()=>{var t,e;console.log("clicked"),this.isVisible=!this.isVisible,(t=this.crates)==null||t.setVisible(this.isVisible),(e=this.toggleVisibleButton)==null||e.setFrame(this.isVisible?1:0)}),this.toggleVisibleButton.setOrigin(.8))}getMaxScore(){let r=0,t=0;for(let e=0;e<this.gridData.height;e++)for(let s=0;s<this.gridData.width;s++){const n=this.gridData.gridObjects[e][s],o=this.gridData.gridObjectives[e][s];n==="none"||n==="crane"||r++,o==="none"||o==="crane"||t++}this.maxScore=Math.min(r,t)}placeBlocks(r){const t=this.scene.physics.add.group({collideWorldBounds:!0});for(let e=0;e<this.gridData.width;e++)for(let s=this.gridData.height-1;s>=0;s--)switch(console.log("test"),r?this.gridData.gridObjects[4-s][e]:this.gridData.gridObjectives[4-s][e]){case"none":break;case"crane":{this.crane=new u(this.scene,this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*e,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,!1);break}case"crate-brown":{const n=new b(this.scene,this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*e,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,"regCrate","brown");r||n.setAlpha(.5),n.refreshBody(),t.add(n.setPushable(!1));break}case"crate-red":{const n=new b(this.scene,this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*e,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,"regCrate","red");n.refreshBody(),t.add(n.setPushable(!1));break}case"crate-green":{const n=new b(this.scene,this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*e,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,"regCrate","green");n.refreshBody(),t.add(n.setPushable(!1));break}case"crate-blue":{const n=new b(this.scene,this.gridVars.GRID_START_LEFT+this.gridVars.GRID_SQUARE_SIZE*e,this.scene.sys.game.canvas.height-this.gridVars.GRID_START_BOTTOM-this.gridVars.GRID_SQUARE_SIZE*s,"regCrate","blue");n.refreshBody(),t.add(n.setPushable(!1));break}}return this.scene.physics.add.collider(t,t),this.crane!==void 0&&r&&this.scene.physics.add.collider(this.crane,t),t}}class d extends _.Scene{constructor(){super("level");i(this,"grid");i(this,"secondaryGrid");i(this,"start_blocks",0);i(this,"left_blocks",0);i(this,"right_blocks",0);i(this,"up_blocks",0);i(this,"down_blocks",0);i(this,"crates");i(this,"endCrates");i(this,"crane");i(this,"start_instruction");i(this,"score",0);i(this,"Instructions");i(this,"background")}get getCrane(){return this.crane}init(t){this.grid=new I(t.gridData,!0,this),this.secondaryGrid=new I(t.gridData,!1,this),this.start_blocks=t.gridData.start_blocks,this.up_blocks=t.gridData.up_blocks,this.left_blocks=t.gridData.left_blocks,this.right_blocks=t.gridData.right_blocks,this.down_blocks=t.gridData.down_blocks,this.createLevel()}createLevel(){this.background=this.add.image(this.sys.game.canvas.width/2,this.sys.game.canvas.height/2,"background"),this.background.setScale(this.sys.game.canvas.width,this.sys.game.canvas.height),this.grid.makeGrid(),this.crates=this.grid.crates,this.endCrates=this.grid.endCrates,this.crane=this.grid.crane,this.secondaryGrid.makeGrid();const t=document.getElementById("editor");console.log(t);const e=t.contentWindow;e.scene=this,this.generate_instructions();const s=this.add.rectangle(this.sys.game.canvas.width-80,this.sys.game.canvas.height-130,140,30,2113632,1);s.setInteractive(),s.on("pointerover",()=>{s.setFillStyle(2113632,.6)}),s.on("pointerout",()=>{s.setFillStyle(2113632,1)}),this.add.text(this.sys.game.canvas.width-80,this.sys.game.canvas.height-130,"execute!",{fontSize:"18px",color:"#fff"}).setOrigin(.5),s.on("pointerdown",()=>{console.log(this.InstructionChainToString()),this.execute(this.InstructionChainToString())});const o=this.add.rectangle(this.sys.game.canvas.width-80,this.sys.game.canvas.height-30,140,30,2113632,1);o.setInteractive(),o.on("pointerover",()=>{o.setFillStyle(2113632,.6)}),o.on("pointerout",()=>{o.setFillStyle(2113632,1)}),this.add.text(this.sys.game.canvas.width-80,this.sys.game.canvas.height-30,"level select",{fontSize:"18px",color:"#fff"}).setOrigin(.5),o.on("pointerdown",()=>{this.scene.start("LevelSelectScene")});const a=this.add.rectangle(this.sys.game.canvas.width-80,this.sys.game.canvas.height-80,140,30,2113632,1);a.setInteractive(),a.on("pointerover",()=>{a.setFillStyle(2113632,.6)}),a.on("pointerout",()=>{a.setFillStyle(2113632,1)}),this.add.text(this.sys.game.canvas.width-80,this.sys.game.canvas.height-80,"restart",{fontSize:"18px",color:"#fff"}).setOrigin(.5),a.on("pointerdown",()=>{this.scene.restart()})}update(){this.crane!==void 0&&(this.physics.overlap(this.crane.PICKUP_BOX,this.crates,(t,e)=>{this.crane!==void 0&&(this.crane.toGrab=e)})||(this.crane.toGrab=void 0)),this.checkWin()}checkOverlap(t,e){if(t.getColor()!==e.getColor())return!1;const s=Math.abs(e.body.position.x-t.body.position.x),n=Math.abs(e.body.position.y-t.body.position.y);return Math.sqrt(s*s+n*n)<6}getScore(){var t;this.score=0,(t=this.crates)==null||t.getChildren().forEach(e=>{var s;(s=this.endCrates)==null||s.getChildren().forEach(n=>{const o=e,g=n;this.checkOverlap(g,o)&&this.score++})},this)}checkWin(){this.getScore();const t=this.score===this.grid.maxScore;return t&&(console.log("you win!"),this.add.text(400,300,"YOU WIN!")),t}generate_instructions(){var s,n,o,g,a;let t=400,e=50;for(let c=0;c<this.start_blocks;c++){const l=new p(this,t,e,"start");this.add.existing(l),(s=this.Instructions)==null||s.push(l),this.start_instruction=l,e+=50}t+=100,e=50;for(let c=0;c<this.right_blocks;c++){const l=new p(this,t,e,"right");this.add.existing(l),(n=this.Instructions)==null||n.push(l),e+=50}t+=100,e=50;for(let c=0;c<this.left_blocks;c++){const l=new p(this,t,e,"left");this.add.existing(l),(o=this.Instructions)==null||o.push(l),e+=50}for(let c=0;c<this.down_blocks;c++){const l=new p(this,t,e,"down");this.add.existing(l),(g=this.Instructions)==null||g.push(l),e+=50}t+=100,e=50;for(let c=0;c<this.up_blocks;c++){const l=new p(this,t,e,"up");this.add.existing(l),(a=this.Instructions)==null||a.push(l),e+=50}t+=100,e=50}InstructionChainToString(){let t=this.start_instruction;if(this.start_instruction){let e="";for(;(t==null?void 0:t.nextInstruction)!==void 0;)t=t.nextInstruction,e+=t.instructionType,e+=`
`;return e}return""}execute(t){const e=t,s=new f(e),n=new R(s),o=new y(n),a=new k(o).program(),c=new D(null,this);console.log(c.visit(a))}}i(d,"P_GRID_START_BOTTOM",16),i(d,"P_GRID_START_LEFT",16),i(d,"P_GRID_SQUARE_SIZE",32),i(d,"S_GRID_START_BOTTOM",16),i(d,"S_GRID_START_LEFT",300),i(d,"S_GRID_SQUARE_SIZE",32);class w extends _.Scene{constructor(){super({key:"LevelSelectScene"});i(this,"LEVELS",[{width:5,height:5,gridObjects:[["none","none","none","none","crane"],["none","none","none","none","none"],["none","none","none","none","none"],["none","none","none","none","none"],["crate-brown","crate-brown","crate-brown","none","none"]],gridObjectives:[["none","none","none","none","none"],["none","none","none","none","none"],["none","none","crate-brown","none","none"],["none","none","crate-brown","none","none"],["none","none","crate-brown","none","none"]],start_blocks:1,loop_blocks:0,endloop_blocks:0,left_blocks:6,right_blocks:6,down_blocks:6,up_blocks:6},{width:5,height:5,gridObjects:[["none","none","none","none","crane"],["none","none","none","none","none"],["none","none","none","none","crate-red"],["crate-green","crate-red","crate-blue","none","crate-blue"],["crate-red","crate-blue","crate-green","none","crate-green"]],gridObjectives:[["none","none","none","none","none"],["none","none","none","none","none"],["crate-blue","crate-red","crate-green","none","none"],["crate-blue","crate-red","crate-green","none","none"],["crate-blue","crate-red","crate-green","none","none"]],start_blocks:1,loop_blocks:0,endloop_blocks:0,left_blocks:6,right_blocks:6,down_blocks:6,up_blocks:6}])}preload(){this.load.image("background","assets/TempBackground.png"),this.load.image("gridSquare","assets/GridSquare.png"),this.load.image("regCrate","assets/RegCrate.png"),this.load.image("craneOpen","assets/CraneBasicRed.png"),this.load.image("craneClosed","assets/CraneBasicGreen.png"),this.load.image("cranePickupBox","assets/CranePickupBox.png"),this.load.spritesheet("visibilityButton","assets/VisibilityButtons.png",{frameWidth:48,frameHeight:32}),this.load.image("instruction-start","assets/StartInstruction.png"),this.load.image("instruction-loop","assets/LoopInstruction.png"),this.load.image("instruction-endloop","assets/EndloopInstruction.png"),this.load.image("instruction-up","assets/UpInstruction.png"),this.load.image("instruction-down","assets/DownInstruction.png"),this.load.image("instruction-left","assets/LeftInstruction.png"),this.load.image("instruction-right","assets/RightInstruction.png")}create(){for(let t=0;t<this.LEVELS.length;t++){const e=this.add.rectangle(100+t%6*100,100+Math.floor(t/6)*100,80,80,2113632,1);e.setInteractive(),e.on("pointerover",()=>{e.setFillStyle(2113632,.6)}),e.on("pointerout",()=>{e.setFillStyle(2113632,1)}),this.add.text(100+t%6*100,100+Math.floor(t/6)*100,`${t}`,{fontSize:"40px",color:"#fff"}).setOrigin(.5),e.on("pointerdown",()=>{console.log(`level ${t} clicked`),this.scene.start("level",{levelNumber:t,gridData:this.LEVELS[t]})})}}}const G={type:_.AUTO,parent:"app",width:800,height:600,physics:{default:"arcade",arcade:{gravity:{y:300}}},scene:[w,d]};new _.Game(G);
